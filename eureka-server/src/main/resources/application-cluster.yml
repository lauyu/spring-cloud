server:
  port: 8090

spring:
  application:
    name: eureka-server

logging:
  path: /app/eureka-server/conf/logback.xml
  

---      
spring:
  profiles: peer1  
eureka:
#  waitTimeInMsWhenSyncEmpty: 0
  server:
    enableSelfPreservation: true #仅限于测试开发阶段，关闭自我保护机制
  instance:
    hostname: peer1 
    preferIpAddress: true
    instanceId: ${spring.cloud.client.ipAddress}:${server.port}
  client:
#    register-with-eureka: false
#    fetch-registry: false
    serviceUrl:
      defaultZone: http://peer2:${server.port}/eureka/


---      
spring:
  profiles: peer2  
eureka:
#  waitTimeInMsWhenSyncEmpty: 0
  server:
    enableSelfPreservation: true #仅限于测试开发阶段，关闭自我保护机制
  instance:
    hostname: peer2 
    preferIpAddress: true
    instanceId: ${spring.cloud.client.ipAddress}:${server.port}
  client:
#    register-with-eureka: false
#    fetch-registry: false
    serviceUrl:
      defaultZone: http://peer3:${server.port}/eureka/


---      
spring:
  profiles: peer3  
eureka:
#  waitTimeInMsWhenSyncEmpty: 0
  server:
    enableSelfPreservation: true #仅限于测试开发阶段，关闭自我保护机制
  instance:
    hostname: peer3
    preferIpAddress: true
    instanceId: ${spring.cloud.client.ipAddress}:${server.port}
  client:
#    register-with-eureka: false
#    fetch-registry: false
    serviceUrl:
      defaultZone: http://peer1:${server.port}/eureka/


